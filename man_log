#!/bin/bash

time_now=$(date +%Y-%m-%d'  '%H:%M:%S)
FILE_LOG=/var/log/dvswitch/dvsmu.log

#=====================================================
# Function time_chk
#=====================================================
function time_chk() {
        file=/etc/crontab

        line_no=$(grep -n "man_log" $file -a | cut -d: -f1)
        line=$(cat $file | sed -n ${line_no}p)
        min=${line:0:2}

        line_no=$(grep -n "time=" $file -a | cut -d: -f1)
        line=$(cat $file | sed -n ${line_no}p)
        time=$(echo $line | cut -d '=' -f 2)
}

#=====================================================
# Function main_user_connection_chk
# main_user의 클라이언트 연결상태 확인
#=====================================================

function main_user_connection_chk() {

file1=/var/log/dvswitch/Analog_Bridge.log

echo "" | sudo tee test.txt > /dev/null 2>&1

n=5
until [ $n = 0 ]; do
n=$(($n-1))
log_date=$(date -d "$n day ago" '+%Y-%m-%d')
file2=/var/log/dvswitch/Analog_Bridge-$log_date.log

if [ -e $file2 ]; then
        cat $file2 | sudo tee -a test.txt > /dev/null 2>&1
fi
done


if [ -s $file1 ]; then
        cat $file1 | sudo tee -a test.txt > /dev/null 2>&1
fi

file=test.txt

if [ -e $file ] && [[ ! -z `grep "change" $file -a` ]]; then
line_no_ipchange=$(grep -n "change" $file -a | cut -d: -f1 | tail -1)
line_no_connect=$(grep -n "USRP_TYPE_TEXT" $file -a | cut -d: -f1 | tail -1)
        if [ "$line_no_connect" = "" ]; then line_no_connect=0; fi
line_no_reset=$(grep -n "USRP reset" $file -a | cut -d: -f1 | tail -1)
        if [ "$line_no_reset" = "" ]; then line_no_reset=0; fi
line_no_analog_start=$(grep -n "starting" $file -a | cut -d: -f1 | tail -1)
        if [ "$line_no_analog_start" = "" ]; then line_no_analog_start=0; fi


        if [ $line_no_connect -gt $line_no_reset ] && [ $line_no_connect -gt $line_no_analog_start ]; then
                declare con_cl_M=ok
        elif [ $line_no_ipchange -gt $line_no_reset ] && [ $line_no_ipchange -gt $line_no_analog_start ]; then
                declare con_cl_M=ok
        else
                declare con_cl_M=NO
        fi
else declare con_cl_M=NO
fi

sudo rm $file
echo $con_cl_M

}

#=====================================================
# Function sub_user_connection_chk
# sub_user의 클라이언트 연결상태 확인 및 Analog_Bridge.log의 4일 지난 내용 지우기
#=====================================================

function sub_user_connection_chk() {

con_cl_one_of_sub_users=NO

user="01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20"

for user in $user; do

dir=/opt/user${user}

if [ -d $dir ]; then

file=/var/log/dvswitch/user${user}/Analog_Bridge.log

if [[ ! -z `grep "change" $file -a` ]]; then

        line_no_ipchange=$(grep -n "change" $file -a | cut -d: -f1 | tail -1)
        line_no_connect=$(grep -n "USRP_TYPE_TEXT" $file -a | cut -d: -f1 | tail -1)
        if [ "$line_no_connect" = "" ]; then line_no_connect=0; fi
        line_no_reset=$(grep -n "USRP reset" $file -a | cut -d: -f1 | tail -1)
        if [ "$line_no_reset" = "" ]; then line_no_reset=0; fi
        line_no_analog_start=$(grep -n "starting" $file -a | cut -d: -f1 | tail -1)
        if [ "$line_no_analog_start" = "" ]; then line_no_analog_start=0; fi

        if [ $line_no_ipchange -gt $line_no_reset ]; then
                line=$(cat $file | sed -n ${line_no_ipchange}p)
                else line=$(cat $file | sed -n ${line_no_reset}p)
        fi


        if [ $line_no_connect -gt $line_no_reset ] && [ $line_no_connect -gt $line_no_analog_start ]; then
                declare con_cl_user=ok; con_cl_one_of_sub_users=ok
        elif [ $line_no_ipchange -gt $line_no_reset ] && [ $line_no_ipchange -gt $line_no_analog_start ]; then
                declare con_cl_user=ok; con_cl_one_of_sub_users=ok
        else
                declare con_cl_user=NO
        fi

else declare con_cl_user=NO

fi

#echo "$user $con_cl_user"

if [ "$1" = and_shrink ] && [ $con_cl_user = "NO" ]; then
	declare cmd_add=analog_bridge${user}
	cmd="$cmd $cmd_add"

        file=/var/log/dvswitch/user${user}/Analog_Bridge.log
        date=$(date -d '4 day ago' '+%Y-%m-%d')
        row_no=$(grep -n $date $file | cut -d: -f1 | head -1)
        if [ "$row_no" = "" ]; then row_no=1; fi
        sudo sed -i -e "1,${row_no}d" $file
fi

fi

done
}




######################################################
# MAIN Program
######################################################

if [ ! -e $FILE_LOG ]; then
	echo "$time_now  Start a new dvsMU Log" | sudo tee $FILE_LOG > /dev/null 2>&1
	log_line=--------------------------------------------------
	sudo sed -i "1 i\\$log_line" $FILE_LOG
fi

con_cl_M=$(main_user_connection_chk)

sub_user_connection_chk

#echo $con_cl_M
#echo $con_cl_one_of_sub_users

if [ $con_cl_M = "NO" ] && [ $con_cl_one_of_sub_users = "NO" ]; then

        #---------------------------------------------------
        log_dir=/var/log/dvswitch
        sudo find $log_dir -name '*.log' -mtime +4 -delete

        log_dir=/var/log/mmdvm
        sudo find $log_dir -name '*.log' -mtime +4 -delete
        #---------------------------------------------------

	cmd="sudo systemctl restart"
#	con_cl_M=$(main_user_connection_chk)

	if [ $con_cl_M = "NO" ]; then
	cmd="$cmd analog_bridge"
	fi

	sub_user_connection_chk and_shrink

	file=/etc/crontab
	time_chk
	sudo sed -i -e "/man_log/ c 0 $time * * * root /usr/local/dvs/man_log" $file

	if [[ ! -z `sudo grep "reboot=yes" $file` ]]; then
		log_line="$time_now  REBOOT"
		sudo sed -i "1 i\\$log_line" $FILE_LOG
		sudo reboot
	else
#		echo $cmd
		$cmd
	fi
else
	time_chk

	min=$((min + 10))

	file=/etc/crontab

	if [ $min = 60 ]; then
		sudo sed -i -e "/man_log/ c 0 $time * * * root /usr/local/dvs/man_log" $file
		log_line="$time_now  stn busy, no REBOOT"
		sudo sed -i "1 i\\$log_line" $FILE_LOG

	else
		sudo sed -i -e "/man_log/ c $min $time * * * root /usr/local/dvs/man_log" $file
	fi
fi

#sudo nano $file
